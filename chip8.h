#include <stdlib.h>
#include <inttypes.h>

/*/
 * Everything is held in memory in this implementation.
 * Early interpreters had all of their own code in the first 512 bytes, 
 * but we don't need that space so we might as well make use of it.
 * It's common for font data to be stored here but that only needs so much space.
 * Why not put everything else in there too?
 *
 * Memory mapping:
 * 	000:001 -> Program counter
 *	002:003 -> Index register
 *	004:004 -> Stack counter
 *	005:005 -> Delay timer
 *	006:006 -> Sound timer
 *	010:01F -> Registers
 *	050:0FF -> Font data
 *	100:1FF -> Stack data
/*/
#define PROGRAM_COUNTER	0x000
#define INDEX_REGISTER	0x002
#define STACK_COUNTER	0x004
#define DELAY_TIMER		0x005
#define SOUND_TIMER		0x006
#define REGISTER_START	0x010
#define FONT_START		0x050
#define STACK_START		0x1FF
#define PROG_START		0x200

#define MEMORY_SIZE 0x1000
#define REGISTERS_SIZE 0x10
#define FONT_SIZE 0x50

uint8_t memory[MEMORY_SIZE];

const uint8_t font_data[FONT_SIZE] = {
	0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};